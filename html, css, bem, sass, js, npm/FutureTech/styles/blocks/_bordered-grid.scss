@use '../helpers' as *;

.bordered-grid {
  --columns: 1;
  --itemPaddingY: #{fluid(80,40)};
  

  display: grid;
  grid-template-columns: repeat(var(--columns), 1fr);



  &--2-cols {
    --columns: 2;
    --itemPaddingX: #{rem(80)};

    @include laptop {
      --itemPaddingX: #{rem(50)};
    }

    @include mobile-above {
      .bordered-grid__item {
        &:nth-child(odd) {  //нечетные элементы
          padding-right: var(--itemPaddingX);
          border-right: var(--border);
        }
  
        &:nth-child(even) {  //четные элементы
          @include full-vw-centered-line (  //делаем границу
          bottom,   //привязываем к низу
          auto,   //авто для left
          100%,  // right
          50%   // translate
  
          );
          
          padding-left: var(--itemPaddingX);
        }
      }
    }
    
   

    
  }

  &--3-cols {
    --columns: 3;
    --itemPaddingX: #{rem(50)};

    column-gap: calc(var(--itemPaddingX) * 2);

    @include laptop {
      --itemPaddingX: #{rem(40)};
    }

    @include tablet-above {
      .bordered-grid__item {

        
        &:nth-child(3n - 2),   //доступ к каждому первому элементу в строке (в нашем случае: 1, 4, 7 и тд - первая колонка)
        &:nth-child(3n - 1) {  //доступ к каждому второму элементу в строке (в нашем случае: 2, 5, 8 и тд - вторая колонка)
          position: relative;

         &::after {
          content: '';
          position: absolute;
          top: 0;
          left: calc(100% + var(--itemPaddingX));
          right: 0;
          width: rem(1);
          height: 100%;
          background-color: var(--color-dark-15);
         }
        }  
  
        &:nth-child(3n - 1) { //доступ к каждому второму элементу в строке (в нашем случае: 2, 5, 8 и тд - вторая колонка)
          @include full-vw-centered-line(bottom); 
        }  
      }
    }

    @include tablet {
      --columns: 1;

      .bordered-grid__item:not(:last-child) {
        border-bottom: var(--border);
      }
    }   
  }

  &--4-cols {
    --columns: 4;
    --itemPaddingX: #{rem(50)};
    
    column-gap: calc(var(--itemPaddingX) * 2);

    @include laptop {
      --itemPaddingX: #{rem(30)};
    }

    @include tablet-above {
      .bordered-grid__item {  //элементы в 1, 2 и 3 колонках
        &:nth-child(4n-3),
        &:nth-child(4n-2),
        &:nth-child(4n-1) {
          position: relative;
  
          &::after {
           content: '';
           position: absolute;
           top: 0;
           left: calc(100% + var(--itemPaddingX));
           right: 0;
           width: rem(1);
           height: 100%;
           background-color: var(--color-dark-15);
          }
        }
      }
    }
     
    @include tablet {
      --columns: 2;
    }   
  }

  &--2-cols,
  &--4-cols {
    @include mobile {
      --columns: 1;

      .bordered-grid__item:not(:last-child) {
        border-bottom: var(--border);
      }
    }
  }

  &__item {
    padding-block: var(--itemPaddingY);
   
  } 
}